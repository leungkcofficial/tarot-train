# TAROT CKD Risk Prediction - Environment Variables Example
# Copy this file to .env and update the values

# =============================================================================
# GENERAL CONFIGURATION
# =============================================================================

# Environment (development, staging, production)
ENVIRONMENT=production

# Application settings
APP_NAME=TAROT CKD Risk Prediction
APP_VERSION=1.0.0
DEBUG=false

# =============================================================================
# BACKEND CONFIGURATION
# =============================================================================

# FastAPI settings
LOG_LEVEL=INFO
CORS_ORIGINS=http://localhost:3000,https://tarot-ckd.com
API_PREFIX=/api/v1

# Model settings
MODEL_PATH=../models
MODEL_CACHE_SIZE=1000
ENSEMBLE_SIZE=36

# Inference settings
MAX_BATCH_SIZE=100
INFERENCE_TIMEOUT=30
SHAP_ENABLED=true

# =============================================================================
# FRONTEND CONFIGURATION  
# =============================================================================

# React app settings
REACT_APP_API_URL=http://localhost:8000/api/v1
REACT_APP_APP_NAME=TAROT CKD Risk Prediction
REACT_APP_VERSION=1.0.0
REACT_APP_ENVIRONMENT=production

# Analytics (optional)
REACT_APP_GA_TRACKING_ID=
REACT_APP_SENTRY_DSN=

# =============================================================================
# MODEL DOWNLOAD CONFIGURATION
# =============================================================================

# Model download URL (ZIP archive containing all models)
MODEL_DOWNLOAD_URL=https://example.com/models/tarot-models-v1.0.0.zip

# HuggingFace Hub settings (alternative to direct download)
HF_TOKEN=
HF_REPO=tarot-ckd/models

# AWS S3 settings (for model storage)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_S3_BUCKET=tarot-models
AWS_REGION=us-east-1

# =============================================================================
# DATABASE CONFIGURATION (Future use)
# =============================================================================

# PostgreSQL settings (for future features like usage analytics)
# DATABASE_URL=postgresql://user:password@localhost:5432/tarot_db
# DB_POOL_SIZE=20
# DB_MAX_OVERFLOW=0

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Session settings
SESSION_SECRET_KEY=your-secret-key-here-change-this-in-production
SESSION_MAX_AGE=14400  # 4 hours in seconds

# API rate limiting
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=3600  # 1 hour in seconds

# CORS settings
ALLOW_CREDENTIALS=false
ALLOWED_HOSTS=localhost,127.0.0.1,tarot-ckd.com

# =============================================================================
# MONITORING & LOGGING
# =============================================================================

# Logging settings
LOG_FORMAT=json
LOG_FILE_PATH=./logs/tarot.log
LOG_ROTATION_SIZE=100MB
LOG_RETENTION_DAYS=30

# Sentry error tracking (optional)
SENTRY_DSN=

# OpenTelemetry (optional)
OTEL_ENABLED=false
OTEL_ENDPOINT=http://jaeger:14268/api/traces

# Health check settings
HEALTH_CHECK_INTERVAL=30
STARTUP_TIMEOUT=300

# =============================================================================
# SSL/TLS CONFIGURATION (Production)
# =============================================================================

# SSL certificate paths (for HTTPS)
SSL_CERT_PATH=/etc/ssl/certs/tarot-ckd.crt
SSL_KEY_PATH=/etc/ssl/private/tarot-ckd.key

# Let's Encrypt settings (optional)
LETSENCRYPT_EMAIL=admin@tarot-ckd.com
LETSENCRYPT_DOMAINS=tarot-ckd.com,www.tarot-ckd.com

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Docker Compose settings
COMPOSE_PROJECT_NAME=tarot-ckd
COMPOSE_FILE=docker-compose.yml:docker-compose.prod.yml

# Container settings
BACKEND_REPLICAS=2
FRONTEND_REPLICAS=1
NGINX_REPLICAS=1

# Resource limits
BACKEND_MEMORY=2G
BACKEND_CPUS=1.0
FRONTEND_MEMORY=512M
FRONTEND_CPUS=0.5

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Development mode settings (only for development environment)
RELOAD=false
WORKERS=1
DEV_MODE=false

# Testing
PYTEST_TIMEOUT=300
COVERAGE_THRESHOLD=80

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Feature toggles
ENABLE_SHAP_EXPLANATIONS=true
ENABLE_CONFIDENCE_INTERVALS=true
ENABLE_CLINICAL_BENCHMARKS=true
ENABLE_UPCR_CONVERSION=true
ENABLE_ANALYTICS=false
ENABLE_FEEDBACK_COLLECTION=false

# Clinical validation
REQUIRE_PROFESSIONAL_MODE=true
SHOW_PERFORMANCE_METRICS=true
ENABLE_DISCLAIMER=true

# =============================================================================
# THIRD-PARTY INTEGRATIONS
# =============================================================================

# Email service (for notifications)
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
SMTP_TLS=true

# Notification webhooks
SLACK_WEBHOOK_URL=
TEAMS_WEBHOOK_URL=

# External APIs
CLINICAL_GUIDELINES_API=
DRUG_INTERACTION_API=

# =============================================================================
# BACKUP & MAINTENANCE
# =============================================================================

# Backup settings
BACKUP_ENABLED=false
BACKUP_S3_BUCKET=tarot-backups
BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30

# Maintenance mode
MAINTENANCE_MODE=false
MAINTENANCE_MESSAGE="System maintenance in progress"

# Update settings
AUTO_UPDATE_MODELS=false
MODEL_UPDATE_CHECK_INTERVAL=86400  # Daily

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Cache settings
REDIS_URL=redis://localhost:6379/0
CACHE_TTL=3600  # 1 hour
PREDICTION_CACHE_SIZE=10000

# Model optimization
USE_ONNX_RUNTIME=false
USE_TENSORRT=false
ENABLE_MODEL_QUANTIZATION=false

# Async settings
ASYNC_POOL_SIZE=10
MAX_CONCURRENT_REQUESTS=100