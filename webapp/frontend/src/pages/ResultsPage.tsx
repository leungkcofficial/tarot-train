import React from 'react';
import { useNavigate } from 'react-router-dom';
import { 
  Box, 
  Typography, 
  Button, 
  Alert, 
  Tabs, 
  Tab, 
  Container,
  Paper
} from '@mui/material';
import { 
  Assessment, 
  Home, 
  Psychology,
  Refresh
} from '@mui/icons-material';
import { Helmet } from 'react-helmet-async';

import RiskVisualization from '../components/Results/RiskVisualization';
import ShapVisualization from '../components/Results/ShapVisualization';
import { useSession } from '../contexts/SessionContext';

/**
 * Results page showing risk predictions and explanations
 */
const ResultsPage: React.FC = () => {
  const navigate = useNavigate();
  const { state, clearSession } = useSession();
  const [activeTab, setActiveTab] = React.useState(0);

  const prediction = state.prediction;

  // Redirect if no prediction available
  React.useEffect(() => {
    if (!prediction) {
      navigate('/assessment');
    }
  }, [prediction, navigate]);

  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {
    setActiveTab(newValue);
  };

  const handleNewAssessment = () => {
    clearSession();
    navigate('/assessment');
  };

  const handleGoHome = () => {
    navigate('/');
  };

  if (!prediction) {
    return (
      <Container maxWidth="md" sx={{ py: 8, textAlign: 'center' }}>
        <Alert severity="info">
          <Typography variant="h6">No prediction data available</Typography>
          <Typography>Please complete an assessment first.</Typography>
        </Alert>
        <Button 
          variant="contained" 
          startIcon={<Assessment />}
          onClick={() => navigate('/assessment')}
          sx={{ mt: 3 }}
        >
          Start Assessment
        </Button>
      </Container>
    );
  }

  return (
    <>
      <Helmet>
        <title>Risk Analysis Results - TAROT CKD</title>
        <meta name="description" content="AI-generated CKD progression risk analysis with clinical interpretations and model explanations" />
      </Helmet>

      <Container maxWidth="xl" sx={{ py: 4 }}>
        {/* Header */}
        <Box textAlign="center" sx={{ mb: 4 }}>
          <Typography variant="h3" component="h1" gutterBottom sx={{ fontWeight: 700 }}>
            CKD Risk Analysis Results
          </Typography>
          <Typography variant="h6" color="text.secondary">
            AI-generated predictions with clinical interpretations
          </Typography>
        </Box>

        {/* Action buttons */}
        <Box display="flex" justifyContent="center" gap={2} sx={{ mb: 4 }}>
          <Button
            variant="outlined"
            startIcon={<Home />}
            onClick={handleGoHome}
          >
            Home
          </Button>
          <Button
            variant="contained"
            startIcon={<Refresh />}
            onClick={handleNewAssessment}
          >
            New Assessment
          </Button>
        </Box>

        {/* Clinical Warning */}
        <Alert severity="warning" sx={{ mb: 4 }}>
          <Typography variant="body1" sx={{ fontWeight: 600 }}>
            Healthcare Professional Notice
          </Typography>
          <Typography variant="body2">
            These predictions are generated by AI models for clinical decision support. 
            They should be interpreted within the complete clinical context and are not a substitute 
            for comprehensive patient assessment and clinical judgment.
          </Typography>
        </Alert>

        {/* Results Tabs */}
        <Paper sx={{ borderRadius: 3 }}>
          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>
            <Tabs 
              value={activeTab} 
              onChange={handleTabChange}
              variant={window.innerWidth < 600 ? 'scrollable' : 'standard'}
              scrollButtons="auto"
            >
              <Tab 
                label="Risk Visualization" 
                icon={<Assessment />}
                iconPosition="start"
              />
              <Tab 
                label="AI Explanation" 
                icon={<Psychology />}
                iconPosition="start"
              />
            </Tabs>
          </Box>

          <Box sx={{ p: 4 }}>
            {activeTab === 0 && (
              <RiskVisualization prediction={prediction} />
            )}
            
            {activeTab === 1 && (
              <ShapVisualization prediction={prediction} />
            )}
          </Box>
        </Paper>

        {/* Session Notice */}
        <Alert severity="info" sx={{ mt: 4 }}>
          <Typography variant="body2">
            <strong>Privacy Notice:</strong> This analysis was performed using temporary session data. 
            No patient information has been stored or logged. Session data will be automatically 
            cleared after 4 hours of inactivity.
          </Typography>
        </Alert>

        {/* Footer actions */}
        <Box display="flex" justifyContent="center" gap={2} sx={{ mt: 6 }}>
          <Button
            variant="outlined"
            onClick={() => navigate('/performance')}
          >
            View Model Performance
          </Button>
          <Button
            variant="outlined"
            onClick={() => navigate('/disclaimer')}
          >
            Clinical Disclaimer
          </Button>
        </Box>
      </Container>
    </>
  );
};

export default ResultsPage;